import pygame
import random

# initialize pygame and create window
pygame.init()
screen = pygame.display.set_mode((400, 300))
pygame.display.set_caption("Snake Game")

# initialize clock for controlling game speed
clock = pygame.time.Clock()

# initialize snake position and food position
snake_x = 200
snake_y = 150
food_x = random.randint(0, 39) * 10
food_y = random.randint(0, 29) * 10

# initialize snake body as a list of blocks
snake_body = [(snake_x, snake_y)]

# initialize direction and speed
direction = "right"
speed = 10

# game loop
running = True
while running:
    # handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                direction = "up"
            elif event.key == pygame.K_DOWN:
                direction = "down"
            elif event.key == pygame.K_LEFT:
                direction = "left"
            elif event.key == pygame.K_RIGHT:
                direction = "right"

    # update snake position
    if direction == "up":
        snake_y -= speed
    elif direction == "down":
        snake_y += speed
    elif direction == "left":
        snake_x -= speed
    elif direction == "right":
        snake_x += speed

    # add new head to snake body
    snake_body.insert(0, (snake_x, snake_y))

    # check if snake has eaten the food
    if snake_x == food_x and snake_y == food_y:
        food_x = random.randint(0, 39) * 10
        food_y = random.randint(0, 29) * 10
    else:
        # remove last block of snake body
        snake_body.pop()

    # check if snake has hit the wall or itself
    if snake_x < 0 or snake_x >= 400 or snake_y < 0 or snake_y >= 300 or (snake_x, snake_y) in snake_body[1:]:
        running = False

    # fill screen with black
    screen.fill((0, 0, 0))

    # draw food
    pygame.draw.rect(screen, (255, 0, 0), (food_x, food_y, 10, 10))

    # draw snake
    for block in snake_body:
        pygame.draw.rect(screen, (0, 255, 0), (block[0], block[1], 10, 10))

    # update display
    pygame.display.update()

    # control game speed
    clock.tick(10)

# quit pygame
pygame.quit()
